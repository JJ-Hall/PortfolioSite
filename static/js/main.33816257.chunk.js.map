{"version":3,"sources":["images/Travelsite.JPG","images/homeButton.svg","images/aboutMeButton.svg","images/projectButton.svg","images/contactButton.svg","images/github.svg","images/izuddin-h-bg.jpg","components/header.js","components/intro.js","components/about.js","components/projectCard.js","components/projects.js","components/contact.js","components/Toggler.js","components/Themes.js","components/globalStyles.js","App.js","components/useDarkMode.js","serviceWorker.js","index.js"],"names":["module","exports","HeaderDiv","styled","div","SiteLinksDiv","ExternalLinkDiv","GitImg","img","Header","to","src","HomeButton","AboutButton","ProjectButton","ContactButton","href","GithubButton","IntroDiv","ContentDiv","TextDiv","h1","SmallTextDiv","h3","Intro","class","AboutDiv","AboutContent","TitleText","InfoText","p","About","Overlay","ProjectInfo","props","color","Img","ProjectContainer","backgroundColor","ProjectCard","alt","title","info","ProjectDiv","ProjectsLayout","ProjectsTitle","ProjectsTextDiv","ProjectCardDiv","Projects","TravelSiteImg","ContactDiv","Body","ContactForms","ContactText","a","ContactForm","target","Button","button","theme","background","toggleBorder","text","Toggle","toggleTheme","onClick","lightTheme","body","darkTheme","GlobalStyles","createGlobalStyle","ContainerDiv","ImgDiv","ButtonDiv","App","useState","setTheme","mountedComponent","setMountedComponent","setMode","mode","window","localStorage","setItem","useEffect","localTheme","getItem","useDarkMode","themeToggler","themeMode","Background","path","component","exact","Contact","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.33816257.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Travelsite.dbbb95f0.JPG\";","module.exports = __webpack_public_path__ + \"static/media/homeButton.065f7231.svg\";","module.exports = __webpack_public_path__ + \"static/media/aboutMeButton.5f57f604.svg\";","module.exports = __webpack_public_path__ + \"static/media/projectButton.aa4ad851.svg\";","module.exports = __webpack_public_path__ + \"static/media/contactButton.a2353b04.svg\";","module.exports = __webpack_public_path__ + \"static/media/github.2a416c34.svg\";","module.exports = __webpack_public_path__ + \"static/media/izuddin-h-bg.405ec938.jpg\";","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport HomeButton from \"../images/homeButton.svg\";\r\nimport AboutButton from \"../images/aboutMeButton.svg\";\r\nimport ProjectButton from \"../images/projectButton.svg\";\r\nimport ContactButton from \"../images/contactButton.svg\";\r\nimport GithubButton from \"../images/github.svg\";\r\n// import { Router, Link } from \"react-router-dom\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\n// import Toggle from \"../components/Toggler\";\r\n// import { useDarkMode } from \"../components/useDarkMode\";\r\n// import { lightTheme, darkTheme, oldTheme } from \"../components/Themes\";\r\n// import { ThemeProvider } from \"styled-components\";\r\n// import { GlobalStyles } from \"../components/globalStyles\";\r\n\r\nconst HeaderDiv = styled.div`\r\n  // border: solid;\r\n  display: flex;\r\n  justify-content: center;\r\n  width: 3vw;\r\n  height: 100vh;\r\n  position: fixed;\r\n  // background: rgba(175, 175, 175, 0.3);\r\n`;\r\n\r\nconst SiteLinksDiv = styled.div`\r\n  justify-content: space-evenly;\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 80%;\r\n`;\r\n\r\nconst ExternalLinkDiv = styled.div`\r\n  display: flex;\r\n  // height: 1%;\r\n  justify-content: center;\r\n  position: absolute;\r\n  right: 0;\r\n  bottom: 3%;\r\n  color: red;\r\n`;\r\n\r\nconst GitImg = styled.img`\r\n  width: 95%;\r\n  fill: currentColor;\r\n`;\r\n\r\nfunction Header() {\r\n  return (\r\n    <HeaderDiv>\r\n      <SiteLinksDiv>\r\n        <Link to=\"/\">\r\n          <img src={HomeButton} />\r\n        </Link>\r\n        <Link to=\"/about\">\r\n          <img src={AboutButton} />\r\n        </Link>\r\n        <Link to=\"projects\">\r\n          <img src={ProjectButton} />\r\n        </Link>\r\n        <Link to=\"/contact\">\r\n          <img src={ContactButton} />\r\n        </Link>\r\n      </SiteLinksDiv>\r\n      <ExternalLinkDiv>\r\n        <a href=\"https://github.com/jj-hall\">\r\n          <GitImg src={GithubButton} />\r\n        </a>\r\n      </ExternalLinkDiv>\r\n    </HeaderDiv>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n// import Toggle from \"../components/Toggler\";\r\n// import { useDarkMode } from \"../components/useDarkMode\";\r\n// import { lightTheme, darkTheme, oldTheme } from \"../components/Themes\";\r\n// import { ThemeProvider } from \"styled-components\";\r\n// import { GlobalStyles } from \"../components/globalStyles\";\r\n\r\nconst IntroDiv = styled.div`\r\n  height: 100vh;\r\n  width: 100vw;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n`;\r\n\r\nconst ContentDiv = styled.div``;\r\n\r\nconst TextDiv = styled.h1`\r\n  width: 50%;\r\n  margin: auto;\r\n  color: ;\r\n`;\r\n\r\nconst SmallTextDiv = styled.h3`\r\n  width: 50%;\r\n  margin: auto;\r\n  color: ;\r\n`;\r\n\r\nfunction Intro() {\r\n  return (\r\n    <IntroDiv>\r\n      <ContentDiv>\r\n        <TextDiv>Hi.</TextDiv>\r\n        <TextDiv>I'm Josh</TextDiv>\r\n        <SmallTextDiv class=\"test\">A Web Developer</SmallTextDiv>\r\n        <SmallTextDiv>From St. Louis, Missouri</SmallTextDiv>\r\n      </ContentDiv>\r\n    </IntroDiv>\r\n  );\r\n}\r\n\r\nexport default Intro;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst AboutDiv = styled.div`\r\n  height: 100vh;\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst AboutContent = styled.div`\r\n  width: 50%;\r\n  margin: auto;\r\n`;\r\n\r\nconst TitleText = styled.h1`\r\n  color: ;\r\n`;\r\n\r\nconst InfoText = styled.p`\r\n  color: ;\r\n`;\r\n\r\nfunction About() {\r\n  return (\r\n    <AboutDiv>\r\n      <AboutContent>\r\n        <TitleText>ABOUT</TitleText>\r\n        <InfoText>\r\n          I'm Josh, a Teacher with a growing passion for Web Development.\r\n        </InfoText>\r\n        <InfoText>I live in St.Louis, Missouri.</InfoText>\r\n        <InfoText>\r\n          I started programming during the winter of 2018. I started by watching\r\n          videos and trying to gain a decent understanding of JavaScript and\r\n          React.\r\n        </InfoText>\r\n        <InfoText>\r\n          I have a strong passion for learning web development. I look forward\r\n          to any potential paths this career may take me on.\r\n        </InfoText>\r\n        <TitleText>Skills</TitleText>\r\n        <InfoText>Still under counstruction.</InfoText>\r\n      </AboutContent>\r\n    </AboutDiv>\r\n  );\r\n}\r\n\r\nexport default About;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Overlay = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  height: 100%;\r\n  width: 100%;\r\n  opacity: 0;\r\n  transition: 0.5s ease;\r\n  // background-color: rgba(173, 25, 25, 0.2);\r\n`;\r\n\r\nconst ProjectInfo = styled.div`\r\n  color: ${(props) => props.color || \"black\"};\r\n  font-size: 20px;\r\n  width: 100%;\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  -webkit-transform: translate(-50%, -50%);\r\n  -ms-transform: translate(-50%, -50%);\r\n  transform: translate(-50%, -50%);\r\n  text-align: center;\r\n`;\r\n\r\nconst Img = styled.img`\r\n  height: 100%;\r\n  width: 100%;\r\n  object-fit: cover;\r\n  opacity: 1;\r\n  transition: 0.5s ease;\r\n`;\r\n\r\nconst ProjectContainer = styled.div`\r\n  position: relative;\r\n  height: 350px;\r\n  width: 350px;\r\n  background-color: ${(props) => props.backgroundColor || \"rgb(58, 231, 64)\"};\r\n  &:hover ${Img} {\r\n    opacity: 0.3;\r\n  }\r\n  &:hover ${Overlay} {\r\n    opacity: 1;\r\n  }\r\n`;\r\n// const { backgroundColor } = props;\r\n// const TitleDiv = styled.div;\r\n// const InfoDiv = styled.div;\r\n\r\nfunction ProjectCard(props) {\r\n  return (\r\n    <ProjectContainer backgroundColor={props.backgroundColor}>\r\n      <a href={props.href}>\r\n        <Img src={props.src} alt={props.alt} />\r\n        <Overlay>\r\n          <ProjectInfo color={props.color}>\r\n            <h1>{props.title}</h1>\r\n            <p>{props.info}</p>\r\n          </ProjectInfo>\r\n        </Overlay>\r\n      </a>\r\n    </ProjectContainer>\r\n  );\r\n}\r\n\r\nexport default ProjectCard;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport ProjectCard from \"./projectCard\";\r\nimport TravelSiteImg from \"../images/Travelsite.JPG\";\r\n\r\nconst ProjectDiv = styled.div`\r\n  height: 100vh;\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst ProjectsLayout = styled.div`\r\n  text-align: center;\r\n`;\r\n\r\nconst ProjectsTitle = styled.h1``;\r\n\r\nconst ProjectsTextDiv = styled.div`\r\n  margin: 80px;\r\n`;\r\n\r\nconst ProjectCardDiv = styled.div`\r\n  display: flex;\r\n  // margin: auto;\r\n  justify-content: space-evenly;\r\n`;\r\n\r\nfunction Projects() {\r\n  return (\r\n    <ProjectDiv>\r\n      <ProjectsLayout>\r\n        <ProjectsTextDiv>\r\n          <ProjectsTitle>Projects</ProjectsTitle>\r\n        </ProjectsTextDiv>\r\n        <ProjectCardDiv>\r\n          <ProjectCard\r\n            backgroundColor=\"rgba(184, 35, 35, .5)\"\r\n            color=\"white\"\r\n            href=\"https://infallible-wiles-01b8f6.netlify.app/\"\r\n            src={TravelSiteImg}\r\n            alt=\"Basic Travel Site\"\r\n            title=\"Basic Travel Site\"\r\n            info=\"Travel themed website. Made using Gatsby.\"\r\n          />\r\n          <ProjectCard\r\n            backgroundColor=\"rgb(255, 255, 255, .5)\"\r\n            color=\"rgb(58, 139, 231, 1)\"\r\n            src={TravelSiteImg}\r\n            alt=\"Basic Travel Site\"\r\n            title=\"Variety\"\r\n            info=\"Place info about project here\"\r\n          />\r\n          <ProjectCard\r\n            backgroundColor=\"rgb(58, 139, 231, .5)\"\r\n            src={TravelSiteImg}\r\n            alt=\"Basic Travel Site\"\r\n            title=\"Variety\"\r\n            info=\"Place info about project here\"\r\n          />\r\n        </ProjectCardDiv>\r\n      </ProjectsLayout>\r\n    </ProjectDiv>\r\n  );\r\n}\r\n\r\nexport default Projects;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ContactDiv = styled.div`\r\n  height: 100vh;\r\n  width: 100vw;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Body = styled.div`\r\n  height: 60%;\r\n  margin: auto;\r\n  justify-content: center;\r\n`;\r\n\r\nconst TextDiv = styled.h1`\r\n  width: 60%;\r\n  margin: auto;\r\n  text-align: center;\r\n`;\r\n\r\nconst ContactForms = styled.div`\r\n  width: 20%;\r\n  margin: auto;\r\n  text-align: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  font-size: larger;\r\n  padding: 38px;\r\n`;\r\n\r\nconst ContactText = styled.a`\r\n  font-size: larger;\r\n  padding: 10px;\r\n  text-decoration: none;\r\n  color: #67eaca;\r\n  &:hover {\r\n    transform: scale(1.1);\r\n  }\r\n`;\r\n\r\nfunction ContactForm() {\r\n  return (\r\n    <ContactDiv>\r\n      <Body>\r\n        <TextDiv>\r\n          Please Feel Free To Contact Me With Any Questions Or Job opportunities\r\n        </TextDiv>\r\n        <ContactForms>\r\n          <ContactText href=\"mailto:joshhall1991@gmail.com\" target=\"_blank\">\r\n            Send an Email\r\n          </ContactText>\r\n\r\n          <ContactText href=\"https://www.linkedin.com\" target=\"_blank\">\r\n            Connect on LinkedIn\r\n          </ContactText>\r\n        </ContactForms>\r\n      </Body>\r\n    </ContactDiv>\r\n  );\r\n}\r\n\r\nexport default ContactForm;\r\n","import React from \"react\";\r\nimport { func, string } from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Button = styled.button`\r\n  background: rgba(255, 255, 255, 0);\r\n//   ${({ theme }) => theme.background};\r\n  border: 2px solid ${({ theme }) => theme.toggleBorder};\r\n  border-radius: 10px;\r\n  color: ${({ theme }) => theme.text};\r\n  cursor: pointer;\r\n  font-size:.7rem;\r\n  font-weight: 8px;\r\n  padding: 0.2rem;\r\n  }\r\n`;\r\n\r\nconst Toggle = ({ theme, toggleTheme }) => {\r\n  return <Button onClick={toggleTheme}>Switch Theme</Button>;\r\n};\r\nToggle.propTypes = {\r\n  theme: string.isRequired,\r\n  toggleTheme: func.isRequired,\r\n};\r\nexport default Toggle;\r\n","export const lightTheme = {\r\n  body: \"#FFF\",\r\n  text: \"#363537\",\r\n  toggleBorder: \"#999\",\r\n  background: \"#fff\",\r\n};\r\nexport const darkTheme = {\r\n  body: \"#363537\",\r\n  text: \"#FAFAFA\",\r\n  toggleBorder: \"#6B8096\",\r\n  background: \"#999\",\r\n};\r\n\r\nexport const oldTheme = {\r\n  body: \"yellow\",\r\n  text: \"green\",\r\n  toggleBorder: \"#6B8096\",\r\n  background: \"purple\",\r\n};\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n  body {\r\n    background: ${({ theme }) => theme.body};\r\n    color: ${({ theme }) => theme.text};\r\n    font-family: Tahoma, Helvetica, Arial, Roboto, sans-serif;\r\n    transition: all 0.50s linear;\r\n  }\r\n  `;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport styled from \"styled-components\";\nimport Header from \"./components/header\";\nimport Intro from \"./components/intro\";\nimport About from \"./components/about\";\nimport Projects from \"./components/projects\";\nimport Background from \"./images/izuddin-h-bg.jpg\";\nimport Contact from \"./components/contact\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Toggle from \"./components/Toggler\";\nimport { useDarkMode } from \"./components/useDarkMode\";\nimport { lightTheme, darkTheme, oldTheme } from \"./components/Themes\";\nimport { ThemeProvider } from \"styled-components\";\nimport { GlobalStyles } from \"./components/globalStyles\";\n\nconst ContainerDiv = styled.div`\n  width: 100vw;\n`;\n\nconst ImgDiv = styled.img`\n  margin: 0px;\n  width: 100%;\n  height: 100%;\n  // object-fit: cover;\n  position: fixed;\n  opacity: 0.6;\n  z-index: -1;\n`;\n\nconst ButtonDiv = styled.div`\n  position: absolute;\n  top: 0;\n  width: 100%;\n  justify-content: flex-end;\n  display: flex;\n`;\n\nfunction App() {\n  const [theme, themeToggler, mountedComponent] = useDarkMode();\n  const themeMode = theme === \"light\" ? lightTheme : darkTheme;\n\n  if (!mountedComponent) return <div />;\n  return (\n    <Router>\n      <ThemeProvider theme={themeMode}>\n        <GlobalStyles />\n        <ContainerDiv>\n          <ImgDiv src={Background} />\n          <ButtonDiv>\n            <Toggle theme={theme} toggleTheme={themeToggler} />\n          </ButtonDiv>\n          <Header />\n          <Switch>\n            <Route path=\"/\" component={Intro} exact />\n            <Route path=\"/about\" component={About} />\n            <Route path=\"/projects\" component={Projects} />\n            <Route path=\"/contact\" component={Contact} />\n          </Switch>\n        </ContainerDiv>\n      </ThemeProvider>\n    </Router>\n  );\n}\n\nexport default App;\n","import { useEffect, useState } from \"react\";\r\n\r\nexport const useDarkMode = () => {\r\n  const [theme, setTheme] = useState(\"light\");\r\n  const [mountedComponent, setMountedComponent] = useState(false);\r\n  const setMode = (mode) => {\r\n    window.localStorage.setItem(\"theme\", mode);\r\n    setTheme(mode);\r\n  };\r\n\r\n  const themeToggler = () => {\r\n    theme === \"light\" ? setMode(\"dark\") : setMode(\"light\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    const localTheme = window.localStorage.getItem(\"theme\");\r\n    localTheme ? setTheme(localTheme) : setMode(\"light\");\r\n    setMountedComponent(true);\r\n  }, []);\r\n  return [theme, themeToggler, mountedComponent];\r\n};\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}